// Time complexity: O(2^(n + m))
public class GridWays {
    public static int gridWays(int i, int j, int n, int m) { 
        // Base case
        if(i == n - 1 && j == m - 1) { // Target is reached
            return 1;
        } else if(i == n || j == m) {
            return 0;
        }
        
        // Recurssive calls
        // Right
        int way1 = gridWays(i, j + 1, n, m);
        // Down
        int way2 = gridWays(i + 1, j, n, m);
        return way1 + way2;
    }
    public static void main(String args[]) {
        int n = 3, m = 3;
        System.out.println(gridWays(0, 0, n, m));
    }
}
