// Fibonacci number
public class FibonacciNumber {
    public static int fibonacciMemoization(int n, int dp[]) {
        if (n == 0 || n == 1) {
            return n;
        }
        // Already claculated
        if (dp[n] != 0) {
            return dp[n];
        }
        dp[n] = fibonacciMemoization(n - 1, dp) + fibonacciMemoization(n - 2, dp);
        return dp[n];
    }

    public static int fibonacciTabulation(int n) {
        int dp[] = new int[n + 1];
        dp[0] = 0; // Can skip as default value is also 0
        dp[1] = 1;
        for (int i = 2; i < dp.length; i++) {
            dp[i] = dp[i - 1] + dp[i - 2];
        }
        return dp[n];
    }

    public static void main(String args[]) {
        int n = 5;
        // Memoization
        int dp[] = new int[n + 1];
        System.out.println("By memoization method: " + fibonacciMemoization(n, dp));
        // Tabulation
        System.out.println("By tabulation method: " + fibonacciTabulation(n));
    }
}
